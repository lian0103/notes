import{_ as l,r as c,o as i,c as u,a as n,b as a,w as p,d as s,e as o}from"./app-Pb3OPLon.js";const r={},d=n("h1",{id:"nodejs架設web應用",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#nodejs架設web應用","aria-hidden":"true"},"#"),s(" NodeJS架設Web應用")],-1),k={class:"table-of-contents"},v=n("p",null,"NodeJS生態倚賴許多NPM中的套件庫，可以用來協助架設各種Web應用，以下是架設過程的紀錄。",-1),m={href:"https://github.com/lian0103/NodeAPI",target:"_blank",rel:"noopener noreferrer"},b=o(`<h2 id="目錄結構" tabindex="-1"><a class="header-anchor" href="#目錄結構" aria-hidden="true">#</a> 目錄結構</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>│  .env
│  .env.example
│  .gitignore
│  package-lock.json
│  package.json
│  server.js
│  sql.sql
│  
├─config
│      db.js
│      
├─controllers
│      fileController.js
│      postControllers.js
│      
├─helpers
│      httpLogger.js
│      logger.js
│      mail.js
│      
├─logs
│      error.log
│      info.log
│      
├─models
│      Post.js
│      
├─node_modules
│      
├─routes
│      fileRoutes.js
│      postRoutes.js
│      
├─uploadFiles
│      ccc.jpg
│      
└─views
        uploadFile.ejs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="串接mysql" tabindex="-1"><a class="header-anchor" href="#串接mysql" aria-hidden="true">#</a> 串接MySQL</h2><p>本地安裝MySQL。在安裝成功後，可以先使用workbench做連線測試，這組資訊記錄下來之後要讓Node做連線使用。</p><h3 id="連線測試" tabindex="-1"><a class="header-anchor" href="#連線測試" aria-hidden="true">#</a> 連線測試</h3><p><img src="https://i.imgur.com/lC9qWYd.jpg" alt=""><img src="https://i.imgur.com/XB5c2Bt.jpg" alt=""></p><ul><li>建立Post表的欄位與資料</li></ul><p><img src="https://i.imgur.com/OrOogrN.jpg" alt=""></p><h3 id="config-db-js" tabindex="-1"><a class="header-anchor" href="#config-db-js" aria-hidden="true">#</a> config/db.js</h3>`,9),h={href:"https://www.npmjs.com/package/mysql2",target:"_blank",rel:"noopener noreferrer"},g=o(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;dotenv&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//藉此讀取.env的參數</span>
<span class="token keyword">const</span> mysql <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mysql2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//連線資料庫所使用的套件</span>

<span class="token keyword">const</span> pool <span class="token operator">=</span> mysql<span class="token punctuation">.</span><span class="token function">createPool</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">host</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">DB_HOST</span><span class="token punctuation">,</span>
  <span class="token literal-property property">user</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">DB_USER</span><span class="token punctuation">,</span>
  <span class="token literal-property property">database</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">DB_NAME</span><span class="token punctuation">,</span>
  <span class="token literal-property property">password</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">DB_PASSWORD</span><span class="token punctuation">,</span>
  <span class="token literal-property property">port</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">DB_PORT</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> pool<span class="token punctuation">.</span><span class="token function">promise</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//支持非同步處理的連線池物件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="env檔" tabindex="-1"><a class="header-anchor" href="#env檔" aria-hidden="true">#</a> .env檔</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># DATABASE CONNECTION ENVIRONMENT VARIABLES
DB_HOST=localhost
DB_USER=root
DB_NAME=blog-app
DB_PASSWORD=root
DB_PORT=3306
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="models-post-js" tabindex="-1"><a class="header-anchor" href="#models-post-js" aria-hidden="true">#</a> models/Post.js</h3><p>建立一個資料類的Model，並實作資料操作的方法，如CRUD。這同時是透過mysql2的API，來執行sql指令。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> db <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../config/db&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">Post</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">title<span class="token punctuation">,</span> body</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>title <span class="token operator">=</span> title<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>body <span class="token operator">=</span> body<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> created_at <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>
      date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>
    <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>date<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    
    <span class="token comment">//新增1筆3個欄位的資料</span>
    <span class="token keyword">let</span> sql <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
            INSERT INTO posts(
                title,
                body,
                created_at
            )
            VALUES(
                &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;,
                &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>body<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;,
                &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>created_at<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;
            )
        
        </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> db<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//會回傳1個Promise物件</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="開api" tabindex="-1"><a class="header-anchor" href="#開api" aria-hidden="true">#</a> 開API</h2><p>透過NodeJs Express所啟動的Web服務，連線的網域於 http://localhost:3000 並可監聽來訪請求的路徑與HTTP連線方法(GET、POST、UPDATE、DELTE..)對應。</p><h3 id="server-js" tabindex="-1"><a class="header-anchor" href="#server-js" aria-hidden="true">#</a> server.js</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//...(略)</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&#39;/posts&#39;</span><span class="token punctuation">,</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./routes/postRoutes&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="routes-postroutes-js" tabindex="-1"><a class="header-anchor" href="#routes-postroutes-js" aria-hidden="true">#</a> routes/postRoutes.js</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;express&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> postControllers <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../controllers/postControllers&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> router <span class="token operator">=</span> express<span class="token punctuation">.</span><span class="token function">Router</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

router<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>postControllers<span class="token punctuation">.</span>getAllPosts<span class="token punctuation">)</span><span class="token punctuation">;</span>

router<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>postControllers<span class="token punctuation">.</span>createNewPost<span class="token punctuation">)</span><span class="token punctuation">;</span>

router<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&quot;/:id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>postControllers<span class="token punctuation">.</span>getPostById<span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> router<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="postman測試連線" tabindex="-1"><a class="header-anchor" href="#postman測試連線" aria-hidden="true">#</a> Postman測試連線</h3><p>GET方法與路徑/posts，則可對應去呼叫控制層的資料操作方法，並透過exprss路由的回傳物件將資料回傳。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//postControllers.js</span>
<span class="token keyword">const</span> Post <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../models/Post&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

exports<span class="token punctuation">.</span><span class="token function-variable function">getAllPosts</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>posts<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> Post<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span> posts <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">next</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>GET /posts</strong></p><p><img src="https://i.imgur.com/cjUhayn.jpg" alt=""></p><h2 id="上傳檔案" tabindex="-1"><a class="header-anchor" href="#上傳檔案" aria-hidden="true">#</a> 上傳檔案</h2>`,18),f={href:"https://www.npmjs.com/package/formidable",target:"_blank",rel:"noopener noreferrer"},y={href:"https://www.npmjs.com/package/mv",target:"_blank",rel:"noopener noreferrer"},j=o(`<p>使用表單物件和POST方法傳送檔案，formidable可做為中間層把檔案的資訊做解析。解析後的結果，再利用mv做搬運。</p><h3 id="filecontroller-js" tabindex="-1"><a class="header-anchor" href="#filecontroller-js" aria-hidden="true">#</a> fileController.js</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> formidable <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;formidable&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> mv <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mv&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

exports<span class="token punctuation">.</span><span class="token function-variable function">uploadFile</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> form <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">formidable<span class="token punctuation">.</span>IncomingForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  form<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> fields<span class="token punctuation">,</span> files</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> uploadPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;uploadFiles&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//自訂的檔案存放路徑</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>uploadPath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      fs<span class="token punctuation">.</span><span class="token function">mkdirSync</span><span class="token punctuation">(</span><span class="token string">&#39;uploadFiles&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> filename <span class="token operator">=</span> fields<span class="token punctuation">.</span>fileName
      <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>fields<span class="token punctuation">.</span>fileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>
          files<span class="token punctuation">.</span>filetoupload<span class="token punctuation">.</span>originalFilename<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
        <span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
      <span class="token operator">:</span> files<span class="token punctuation">.</span>filetoupload<span class="token punctuation">.</span>originalFilename<span class="token punctuation">;</span><span class="token comment">//有輸入自訂檔名欄位時使用自訂檔名</span>
    <span class="token keyword">const</span> oldpath <span class="token operator">=</span> files<span class="token punctuation">.</span>filetoupload<span class="token punctuation">.</span>filepath<span class="token punctuation">;</span>
    <span class="token keyword">const</span> newpath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>uploadPath<span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">//這個部分之後再比較把圖片檔File轉base64做法的差異</span>
    <span class="token function">mv</span><span class="token punctuation">(</span>oldpath<span class="token punctuation">,</span> newpath<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">File uploaded and moved to </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>newpath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="取得檔案" tabindex="-1"><a class="header-anchor" href="#取得檔案" aria-hidden="true">#</a> 取得檔案</h2>`,4),w={href:"http://expressjs.com/zh-tw/api.html#res.sendFile",target:"_blank",rel:"noopener noreferrer"},_=o(`<h3 id="filecontroller-js-1" tabindex="-1"><a class="header-anchor" href="#filecontroller-js-1" aria-hidden="true">#</a> fileController.js</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>exports<span class="token punctuation">.</span><span class="token function-variable function">getFile</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> fileName <span class="token operator">=</span> req<span class="token punctuation">.</span>params<span class="token punctuation">.</span>fileName<span class="token punctuation">;</span>
  <span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">root</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;uploadFiles&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  res<span class="token punctuation">.</span><span class="token function">sendFile</span><span class="token punctuation">(</span>fileName<span class="token punctuation">,</span> options<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">next</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;無此檔案&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="取得結果" tabindex="-1"><a class="header-anchor" href="#取得結果" aria-hidden="true">#</a> 取得結果</h3><p><strong>GET /file/:fileName</strong></p><p><img src="https://i.imgur.com/0eSrCho.jpg" alt=""></p><h2 id="寄送郵件" tabindex="-1"><a class="header-anchor" href="#寄送郵件" aria-hidden="true">#</a> 寄送郵件</h2><h3 id="helpers-mail-js" tabindex="-1"><a class="header-anchor" href="#helpers-mail-js" aria-hidden="true">#</a> helpers/mail.js</h3>`,7),x={href:"https://www.npmjs.com/package/nodemailer",target:"_blank",rel:"noopener noreferrer"},q=o(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> logger <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./logger&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> nodemailer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;nodemailer&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//透過GMAIL帳號和&#39;應用程式密碼&#39;登入</span>
<span class="token keyword">const</span> transporter <span class="token operator">=</span> nodemailer<span class="token punctuation">.</span><span class="token function">createTransport</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">service</span><span class="token operator">:</span> <span class="token string">&#39;gmail&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">auth</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">user</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">GMAIL_USER</span><span class="token punctuation">,</span>
    <span class="token literal-property property">pass</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">GMAIL_PASS</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> mailOptions <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">from</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">GMAIL_USER</span><span class="token punctuation">,</span>
  <span class="token literal-property property">to</span><span class="token operator">:</span> <span class="token string">&#39;kel0oo0@yahoo.com.tw&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">subject</span><span class="token operator">:</span> <span class="token string">&#39;Sending Email using Node.js&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;That was easy???&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;h1&gt;HI~~!!&lt;/h1&gt;&lt;img src=&quot;https://miro.medium.com/max/676/1*XEgA1TTwXa5AvAdw40GFow.png&quot;&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">sendEmail</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> mergeOption <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>mailOptions<span class="token punctuation">,</span>
    <span class="token operator">...</span>options<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  
  <span class="token comment">//發送</span>
  transporter<span class="token punctuation">.</span><span class="token function">sendMail</span><span class="token punctuation">(</span>mergeOption<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> info</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>mergeOption<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="應用程式密碼" tabindex="-1"><a class="header-anchor" href="#應用程式密碼" aria-hidden="true">#</a> 應用程式密碼</h3><p><img src="https://i.imgur.com/SzAGCvv.jpg" alt=""></p><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>從nodemailer文件上可知，Gmail的送信方式比較適合開發時測試，真正產品應用時還要考量其他因素，不建議使用Gmail。</p></div><h2 id="api請求紀錄" tabindex="-1"><a class="header-anchor" href="#api請求紀錄" aria-hidden="true">#</a> API請求紀錄</h2>`,5),P={href:"https://www.npmjs.com/package/winston",target:"_blank",rel:"noopener noreferrer"},A={href:"https://www.npmjs.com/package/morgan",target:"_blank",rel:"noopener noreferrer"},N=n("ul",null,[n("li",null,[n("p",null,"helplers/logger.js")]),n("li",null,[n("p",null,"helplers/httpLogger.js")]),n("li",null,[n("p",null,[s("紀錄 "),n("img",{src:"https://i.imgur.com/dzh1mVF.jpg",alt:""})])])],-1);function E(S,T){const t=c("router-link"),e=c("ExternalLinkIcon");return i(),u("div",null,[d,n("nav",k,[n("ul",null,[n("li",null,[a(t,{to:"#目錄結構"},{default:p(()=>[s("目錄結構")]),_:1})]),n("li",null,[a(t,{to:"#串接mysql"},{default:p(()=>[s("串接MySQL")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#連線測試"},{default:p(()=>[s("連線測試")]),_:1})]),n("li",null,[a(t,{to:"#config-db-js"},{default:p(()=>[s("config/db.js")]),_:1})]),n("li",null,[a(t,{to:"#env檔"},{default:p(()=>[s(".env檔")]),_:1})]),n("li",null,[a(t,{to:"#models-post-js"},{default:p(()=>[s("models/Post.js")]),_:1})])])]),n("li",null,[a(t,{to:"#開api"},{default:p(()=>[s("開API")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#server-js"},{default:p(()=>[s("server.js")]),_:1})]),n("li",null,[a(t,{to:"#routes-postroutes-js"},{default:p(()=>[s("routes/postRoutes.js")]),_:1})]),n("li",null,[a(t,{to:"#postman測試連線"},{default:p(()=>[s("Postman測試連線")]),_:1})])])]),n("li",null,[a(t,{to:"#上傳檔案"},{default:p(()=>[s("上傳檔案")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#filecontroller-js"},{default:p(()=>[s("fileController.js")]),_:1})])])]),n("li",null,[a(t,{to:"#取得檔案"},{default:p(()=>[s("取得檔案")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#filecontroller-js-1"},{default:p(()=>[s("fileController.js")]),_:1})]),n("li",null,[a(t,{to:"#取得結果"},{default:p(()=>[s("取得結果")]),_:1})])])]),n("li",null,[a(t,{to:"#寄送郵件"},{default:p(()=>[s("寄送郵件")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#helpers-mail-js"},{default:p(()=>[s("helpers/mail.js")]),_:1})]),n("li",null,[a(t,{to:"#應用程式密碼"},{default:p(()=>[s("應用程式密碼")]),_:1})])])]),n("li",null,[a(t,{to:"#api請求紀錄"},{default:p(()=>[s("API請求紀錄")]),_:1})])])]),v,n("p",null,[n("a",m,[s("專案地址"),a(e)])]),b,n("p",null,[n("a",h,[s("NPM mysql2"),a(e)])]),g,n("ul",null,[n("li",null,[s("使用套件 "),n("a",f,[s("formidable"),a(e)]),n("a",y,[s("mv"),a(e)])])]),j,n("p",null,[n("a",w,[s("Express SendFile API"),a(e)])]),_,n("p",null,[s("支持SMTP、Gmail發送的套件 "),n("a",x,[s("nodemailer"),a(e)])]),q,n("p",null,[s("使用套件 "),n("a",P,[s("winston"),a(e)]),s(":用來產生log檔案 "),n("a",A,[s("morgan"),a(e)]),s(":產生能擷取HTTP資訊的中間層")]),N])}const C=l(r,[["render",E],["__file","nodeExpressApp.html.vue"]]);export{C as default};
