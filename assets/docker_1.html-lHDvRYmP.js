import{_ as t,r as c,o as a,c as d,a as e,b as o,w as l,d as r,e as s}from"./app-fCIgjLJf.js";const h={},u=e("h1",{id:"docker使用知識與方法-閱讀筆記-一",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#docker使用知識與方法-閱讀筆記-一","aria-hidden":"true"},"#"),r(" Docker使用知識與方法 閱讀筆記(一)")],-1),_={class:"table-of-contents"},k=s('<img src="https://i.imgur.com/BhBysqw.jpg" style="width:300px;"><h2 id="何謂docker" tabindex="-1"><a class="header-anchor" href="#何謂docker" aria-hidden="true">#</a> 何謂Docker</h2><ul><li>Docker是「可隔離資料、軟體程式(服務)」的工具<br> Docker把服務器上的空間切割出各個容器(Container)，讓服務能享有獨立的運行環境，比如常見的Apache(網路伺服器軟體)、MySQL(資料庫軟體)。</li><li>Docker透過映像檔(Image)來建立容器<br> 可以把映像檔理解成軟體的安裝片，Docker Engine會安裝這些儲存於映像檔的配置後，將軟體安裝於容器內。</li><li>Docker的使用目的<br> 很重要的理由是，避免軟體間倚賴資源衝突。書中舉例是，當A系統和B系統都倚賴同一個函示庫，但有可能A或B因為後續更新，B倚賴的版本升級，卻影響到A系統的運作。</li></ul><h2 id="伺服器與docker" tabindex="-1"><a class="header-anchor" href="#伺服器與docker" aria-hidden="true">#</a> 伺服器與Docker</h2><ul><li>伺服器(Server)是指提供(Service)的裝置<br> 依功能區分，可以區分出1.功能伺服器(網路服務器、郵件服務器)和2.實體伺服器(一台存在於實體的主機)，且實體伺服器上可以同時兼職多個功能伺服器，這取決於實體伺服器上安裝的軟體。 知名的網路伺服器軟體，如Apache、Nginx、IIS。代表性的資料庫伺服器軟體，如MySQL、PostgreSQL、SQL Server。</li><li>以容器安全地共存多個功能伺服器<br> 書中舉例是提到，可以讓一台主機上運行多個Apache服務，因此不需要因為開發階段再去準備另一台Server來啟Apache服務。</li><li>容器便於搬移<br> 只要<strong>有安裝Docker軟體的實體伺服器</strong>，都可以無視實體環境和服務器的差異，來將服務搬移後啟動。</li></ul><h2 id="docker的運作機制" tabindex="-1"><a class="header-anchor" href="#docker的運作機制" aria-hidden="true">#</a> Docker的運作機制</h2><ul><li>每個容器內有類Linux(作業系統)<br> 類Linux是指只有能傳遞服務指令的殼(Shell)，容器只要搭載這種佔據最少資源的類Linux方式，讓實際執行的指令還是交由容器外的Linux核心(kernel)處理。</li><li>原則上在Linux上才能讓Docker運行<br> 所以在Mac或Window作業系統上要運行Docker，會以某種形式準備Linux環境給Docker運行。</li></ul><h2 id="映像檔-image-與容器-continer" tabindex="-1"><a class="header-anchor" href="#映像檔-image-與容器-continer" aria-hidden="true">#</a> 映像檔(image)與容器(continer)</h2>',8),b=e("li",null,[r("兩者關係"),e("br"),r(" 映像檔可以建立容器，而容器也可以建立成映像檔。書中把映像檔比喻為模型，模型可以重複刻出同樣的容器，而建立出來的容器也可以改造後，在建立成為映像檔。")],-1),x={href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"},f=e("br",null,null,-1),m=e("li",null,[r("容器是用完即丟棄"),e("br"),r(" 容器的生命週期，包含建立、啟動、停用和捨棄。當容器被捨棄時，容器內的資料便會消失，因此資料儲存通常是連接"),e("strong",null,"容器外"),r("實體主機的硬碟進行。")],-1),D=e("hr",null,null,-1);function g(p,L){const n=c("router-link"),i=c("ExternalLinkIcon");return a(),d("div",null,[u,e("nav",_,[e("ul",null,[e("li",null,[o(n,{to:"#何謂docker"},{default:l(()=>[r("何謂Docker")]),_:1})]),e("li",null,[o(n,{to:"#伺服器與docker"},{default:l(()=>[r("伺服器與Docker")]),_:1})]),e("li",null,[o(n,{to:"#docker的運作機制"},{default:l(()=>[r("Docker的運作機制")]),_:1})]),e("li",null,[o(n,{to:"#映像檔-image-與容器-continer"},{default:l(()=>[r("映像檔(image)與容器(continer)")]),_:1})])])]),k,e("ul",null,[b,e("li",null,[r("各種容器的映像檔在"),e("a",x,[r("Docker Hub"),o(i)]),f,r(" 可以從hub下載各種服務的映像檔，便可以快速在伺服器上安裝好服務。")]),m]),D])}const v=t(h,[["render",g],["__file","docker_1.html.vue"]]);export{v as default};
