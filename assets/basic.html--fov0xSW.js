import{_ as p,r as t,o as e,c as o,a as n,d as s,b as c,e as i}from"./app-gODyNfEM.js";const l={},u=n("h1",{id:"python-基礎學習",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#python-基礎學習","aria-hidden":"true"},"#"),s(" Python 基礎學習")],-1),k={href:"https://replit.com/@k1319900103/Start#basic.py",target:"_blank",rel:"noopener noreferrer"},r=i(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>name <span class="token operator">=</span> <span class="token string">&quot;jason&quot;</span>
age <span class="token operator">=</span> <span class="token number">33</span>
arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>

<span class="token comment"># tpye</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;-------------&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># isinstance</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">isinstance</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">isinstance</span><span class="token punctuation">(</span>age<span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;-------------&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># operator</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">20</span> <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">**</span><span class="token number">3</span><span class="token punctuation">)</span>

<span class="token builtin">sum</span> <span class="token operator">=</span> <span class="token number">5</span>
<span class="token builtin">sum</span> <span class="token operator">+=</span> <span class="token number">20</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">sum</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">20</span> <span class="token operator">&gt;=</span> <span class="token number">10</span> <span class="token keyword">and</span> <span class="token number">20</span> <span class="token operator">&gt;</span> <span class="token number">19</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">20</span> <span class="token operator">&gt;=</span> <span class="token number">21</span> <span class="token keyword">or</span> <span class="token number">20</span> <span class="token operator">&gt;</span> <span class="token number">19</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">is_adult</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">return</span> <span class="token boolean">True</span> <span class="token keyword">if</span> age <span class="token operator">&gt;=</span> <span class="token number">18</span> <span class="token keyword">else</span> <span class="token boolean">False</span>


<span class="token keyword">print</span><span class="token punctuation">(</span>is_adult<span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;-------------&#39;</span><span class="token punctuation">)</span>
name <span class="token operator">=</span> <span class="token string">&quot;Jason\\nHello&quot;</span>  <span class="token comment">#添加反斜線 配合特殊字元</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span>islower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># it return new str</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;name[5:]: &quot;</span> <span class="token operator">+</span> name<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;name[1:4]: &quot;</span> <span class="token operator">+</span> name<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span><span class="token number">2.3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;-------------&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">from</span> enum <span class="token keyword">import</span> Enum


<span class="token comment"># python用來建立常數的唯一方法</span>
<span class="token keyword">class</span> <span class="token class-name">State</span><span class="token punctuation">(</span>Enum<span class="token punctuation">)</span><span class="token punctuation">:</span>
  INACT <span class="token operator">=</span> <span class="token number">0</span>
  ACT <span class="token operator">=</span> <span class="token number">1</span>


<span class="token keyword">print</span><span class="token punctuation">(</span>State<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>State<span class="token punctuation">[</span><span class="token string">&#39;ACT&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;-------------&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># list</span>
<span class="token comment"># index 正向從0開始 -1則是最後一個開始</span>
sizes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;small&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;medium&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;large&quot;</span><span class="token punctuation">]</span>
sizes<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">&quot;extra large&quot;</span><span class="token punctuation">)</span>
sizes <span class="token operator">+=</span> <span class="token punctuation">[</span><span class="token string">&quot;xxl&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;xxxl&quot;</span><span class="token punctuation">]</span>
sizes<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">&quot;xxxl&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">sorted</span><span class="token punctuation">(</span>sizes<span class="token punctuation">,</span> key<span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">.</span>lower<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>sizes<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sizes<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;small&quot;</span> <span class="token keyword">in</span> sizes<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;small &quot;</span> <span class="token keyword">in</span> sizes<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>sizes<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;-------------&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># Tuples</span>
<span class="token comment"># 不可改動的陣列</span>
names <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>names<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>names<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">sorted</span><span class="token punctuation">(</span>names<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;-------------&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># Dictionaries</span>

city <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;TPE&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Taipei&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;TYN&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Taoyuan&quot;</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>city<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;TPE&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>city<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;TPE2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>city<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>city<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>city<span class="token punctuation">.</span>popitem<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>city<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;-------------&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># sets</span>
<span class="token comment"># item不能重複</span>
set1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;Jason&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Roger&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Roger&quot;</span><span class="token punctuation">}</span>
set2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;Jason&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Paul&quot;</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>set1<span class="token punctuation">)</span>
interSet <span class="token operator">=</span> set1 <span class="token operator">&amp;</span> set2
<span class="token keyword">print</span><span class="token punctuation">(</span>interSet<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;-------------&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function d(m,v){const a=t("ExternalLinkIcon");return e(),o("div",null,[u,n("p",null,[n("a",k,[s("https://replit.com/@k1319900103/Start#basic.py"),c(a)])]),r])}const y=p(l,[["render",d],["__file","basic.html.vue"]]);export{y as default};
