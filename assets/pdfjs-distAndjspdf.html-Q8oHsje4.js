import{_ as c,r as o,o as l,c as u,a as n,b as a,w as p,d as s,f as i}from"./app-a3YRQ2EQ.js";const r={},k=n("h1",{id:"pdf簽名功能",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pdf簽名功能","aria-hidden":"true"},"#"),s(" PDF簽名功能")],-1),d={class:"table-of-contents"},v=i(`<p>需求描述: 在web上開啟pdf後，可以做簽名後，儲存成PDF檔。</p><h2 id="canvas畫筆" tabindex="-1"><a class="header-anchor" href="#canvas畫筆" aria-hidden="true">#</a> canvas畫筆</h2><p>使用html canvas元素，可以建立畫筆效果，在元素區域內綁定mousedown事件，可以取得觸發事件當前的offsetX、offsetY座標。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">onMouseDown</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> el <span class="token operator">=</span> e<span class="token punctuation">.</span>target <span class="token operator">||</span> e<span class="token punctuation">.</span>srcElement<span class="token punctuation">;</span>
    <span class="token keyword">const</span> ctx <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ctx<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>offsetX<span class="token punctuation">,</span> e<span class="token punctuation">.</span>offsetY<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>offsetX<span class="token punctuation">,</span> e<span class="token punctuation">.</span>offsetY<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ctx<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    el<span class="token punctuation">.</span><span class="token function-variable function">onmousemove</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>which <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            el<span class="token punctuation">.</span>onmousemove <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            el<span class="token punctuation">.</span>onmouseup <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>offsetX<span class="token punctuation">,</span> e<span class="token punctuation">.</span>offsetY<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ctx<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    el<span class="token punctuation">.</span><span class="token function-variable function">onmouseup</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        el<span class="token punctuation">.</span>onmousemove <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        el<span class="token punctuation">.</span>onmouseup <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    el<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>HTML canvas</p><div class="language-htmlembedded line-numbers-mode" data-ext="htmlembedded"><pre class="language-htmlembedded"><code>&lt;canvas @mousedown=&quot;onMouseDown&quot;&gt;&lt;/canvas&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="pdfjs-dist" tabindex="-1"><a class="header-anchor" href="#pdfjs-dist" aria-hidden="true">#</a> pdfjs-dist</h2><p>要載入.pdf檔案到canvas元素內，概念上pdf內每一頁都需要對應一個canvas元素，而透過pdfjs-dist庫建立的page實例，可以使用render方法來將內容渲染到指定的canvas元素。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>currentPDF<span class="token punctuation">.</span><span class="token function">getPage</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
    <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">page</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> viewport <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getViewport</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">scale</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Prepare canvas using PDF page dimensions</span>
        <span class="token keyword">var</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">the-canvas-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>pdfState<span class="token punctuation">.</span>value<span class="token punctuation">.</span>page<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> context <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> viewport<span class="token punctuation">.</span>height<span class="token punctuation">;</span>
        canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> viewport<span class="token punctuation">.</span>width<span class="token punctuation">;</span>
        pdfState<span class="token punctuation">.</span>value<span class="token punctuation">.</span>width <span class="token operator">=</span> canvas<span class="token punctuation">.</span>width<span class="token punctuation">;</span>
        pdfState<span class="token punctuation">.</span>value<span class="token punctuation">.</span>height <span class="token operator">=</span> canvas<span class="token punctuation">.</span>height<span class="token punctuation">;</span>

        <span class="token comment">// Render PDF page into canvas context</span>
        <span class="token keyword">var</span> renderContext <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">canvasContext</span><span class="token operator">:</span> context<span class="token punctuation">,</span>
            <span class="token literal-property property">viewport</span><span class="token operator">:</span> viewport<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> renderTask <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>renderContext<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//here</span>
        renderTask<span class="token punctuation">.</span>promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// console.log(&#39;Page rendered&#39;);</span>
            isLoaded<span class="token punctuation">[</span><span class="token string">&#39;&#39;</span> <span class="token operator">+</span> pdfState<span class="token punctuation">.</span>value<span class="token punctuation">.</span>page<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            pdfState<span class="token punctuation">.</span>value<span class="token punctuation">.</span>tempPage <span class="token operator">=</span> pdfState<span class="token punctuation">.</span>value<span class="token punctuation">.</span>page<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        pdfState<span class="token punctuation">.</span>value<span class="token punctuation">.</span>page <span class="token operator">=</span> pdfState<span class="token punctuation">.</span>value<span class="token punctuation">.</span>tempPage<span class="token punctuation">;</span>
        <span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&#39;the page is not exist&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="jspdf" tabindex="-1"><a class="header-anchor" href="#jspdf" aria-hidden="true">#</a> jspdf</h2><p>要實現canvas元素儲存為.pdf檔案，可以先透過canvas元素的toDataURL方法，轉成base64的圖檔資料，再使用jspdf庫創建一個jsPDF實例，使用addImage、addPage來將每一個canvas的圖檔轉換成.pdf內容。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> doc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">jsPDF</span><span class="token punctuation">(</span>direction<span class="token punctuation">,</span> <span class="token string">&#39;px&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>width<span class="token punctuation">,</span> height<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> idx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    doc<span class="token punctuation">.</span><span class="token function">addImage</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> <span class="token string">&#39;JPEG&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>idx <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">!==</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        doc<span class="token punctuation">.</span><span class="token function">addPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
doc<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token string">&#39;all.pdf&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="實作結果" tabindex="-1"><a class="header-anchor" href="#實作結果" aria-hidden="true">#</a> 實作結果</h2>`,13),m={href:"https://lian0103.github.io/jsPDF/",target:"_blank",rel:"noopener noreferrer"},f=n("img",{src:"https://i.imgur.com/lQKI9aC.png",alt:""},null,-1),b=n("h2",{id:"參考",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#參考","aria-hidden":"true"},"#"),s(" 參考")],-1),h={href:"https://parall.ax/products/jspdf",target:"_blank",rel:"noopener noreferrer"},g={href:"https://mozilla.github.io/pdf.js/web/viewer.html",target:"_blank",rel:"noopener noreferrer"},w={href:"https://github.com/lian0103/jsPDF/blob/main/src/components/Pdf.vue",target:"_blank",rel:"noopener noreferrer"};function _(x,j){const t=o("router-link"),e=o("ExternalLinkIcon");return l(),u("div",null,[k,n("nav",d,[n("ul",null,[n("li",null,[a(t,{to:"#canvas畫筆"},{default:p(()=>[s("canvas畫筆")]),_:1})]),n("li",null,[a(t,{to:"#pdfjs-dist"},{default:p(()=>[s("pdfjs-dist")]),_:1})]),n("li",null,[a(t,{to:"#jspdf"},{default:p(()=>[s("jspdf")]),_:1})]),n("li",null,[a(t,{to:"#實作結果"},{default:p(()=>[s("實作結果")]),_:1})]),n("li",null,[a(t,{to:"#參考"},{default:p(()=>[s("參考")]),_:1})])])]),v,n("p",null,[n("a",m,[s("demo"),a(e)]),f]),b,n("ol",null,[n("li",null,[n("a",h,[s("jspdf sample"),a(e)])]),n("li",null,[n("a",g,[s("pdfjs-dist viewer"),a(e)])]),n("li",null,[n("a",w,[s("功能完整代碼"),a(e)])])])])}const P=c(r,[["render",_],["__file","pdfjs-distAndjspdf.html.vue"]]);export{P as default};
