import{_ as n,o as s,c as a,e as t}from"./app.d919249c.js";const p={},e=t(`<h1 id="js-\u539F\u578B\u93C8\u8907\u7FD2" tabindex="-1"><a class="header-anchor" href="#js-\u539F\u578B\u93C8\u8907\u7FD2" aria-hidden="true">#</a> JS \u539F\u578B\u93C8\u8907\u7FD2</h1><h2 id="\u5EFA\u7ACB\u539F\u578B\u93C8" tabindex="-1"><a class="header-anchor" href="#\u5EFA\u7ACB\u539F\u578B\u93C8" aria-hidden="true">#</a> \u5EFA\u7ACB\u539F\u578B\u93C8</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Count</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">initNumber</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>total <span class="token operator">=</span> initNumber<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token class-name">Count</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>total <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>total <span class="token operator">+</span> num<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span> <span class="token comment">//\u56DE\u50B3this \u624D\u53EF\u4EE5\u8B93\u4E0B\u4E00\u500B\u64CD\u4F5C\u7E7C\u7E8C</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token class-name">Count</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">minus</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>total <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>total <span class="token operator">-</span> num<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span> <span class="token comment">//\u56DE\u50B3this \u624D\u53EF\u4EE5\u8B93\u4E0B\u4E00\u500B\u64CD\u4F5C\u7E7C\u7E8C</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token class-name">Count</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">getTotal</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>total<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> countInstance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Count</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

countInstance<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 10</span>

<span class="token comment">// \u9019\u88E1\u7684\u93C8\u5F0F\uFF0C\u5373\u662F\u900F\u904E\u525B\u525B\u8FD4\u56DE\u7684this\u53BB\u7D66\u4E0B\u4E00\u500B\u65B9\u6CD5\u4F7F\u7528</span>
countInstance<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">minus</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 85</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D\uFF0C\u5982\u679C\u4E0D\u4F7F\u7528 class \u8A9E\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u51FD\u5F0F\u5BEB\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">Count</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">initNumber</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>total <span class="token operator">=</span> initNumber <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u8A2A\u554F-countinstance-\u7684-count-\u539F\u578B" tabindex="-1"><a class="header-anchor" href="#\u8A2A\u554F-countinstance-\u7684-count-\u539F\u578B" aria-hidden="true">#</a> \u8A2A\u554F countInstance \u7684 Count \u539F\u578B</h2><p>\u7BC4\u4F8B\u4E2D\uFF0CCount \u5728\u539F\u578B\u4E2D\u8A3B\u518A\u4E86 3 \u500B\u65B9\u6CD5\uFF0CcountInstance \u53EF\u4EE5\u53D6\u4F86\u4F7F\u7528\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8A2A\u554FCount\u7684prototype</span>
countInstance<span class="token punctuation">.</span>__proto__<span class="token punctuation">;</span>
<span class="token comment">//\u6216\u662F</span>
Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>countInstance<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u7D50\u679C</span>
<span class="token punctuation">{</span>
  <span class="token literal-property property">add</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">Function</span> <span class="token punctuation">(</span>anonymous<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">minus</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">Function</span> <span class="token punctuation">(</span>anonymous<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">getTotal</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">Function</span> <span class="token punctuation">(</span>anonymous<span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u9019\u88E1\u7684\u7B49\u50F9 \u8868\u793A\u4EFB\u4F55\u900F\u904ECount\u5EFA\u7ACB\u7684\u5BE6\u9AD4 \u64CD\u4F5C\u7684\u65B9\u6CD5\u90FD\u662F\u6307\u5411\u540C\u4E00\u500B\u8A18\u61B6\u9AD4\u4F4D\u5740\u7684\u65B9\u6CD5</span>
countInstance<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> <span class="token class-name">Count</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span> <span class="token comment">//true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u8A3B\u518A\u65BC-prototype-\u7684\u5167\u5BB9\u4E0D\u662F-property" tabindex="-1"><a class="header-anchor" href="#\u8A3B\u518A\u65BC-prototype-\u7684\u5167\u5BB9\u4E0D\u662F-property" aria-hidden="true">#</a> \u8A3B\u518A\u65BC prototype \u7684\u5167\u5BB9\u4E0D\u662F property</h2><p>\u5728\u5275\u5EFA\u51FA countInstance \u6642\uFF0Ctotal \u9019\u500B\u5C6C\u6027\u624D\u6703\u88AB\u521D\u59CB\u5316\uFF0C\u4E26\u4F9D\u7167\u5EFA\u69CB\u5F0F\u7684\u8173\u672C\u8CE6\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>countInstance<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [class Count]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>countInstance<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&quot;total&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>countInstance<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&quot;add&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),o=[e];function c(i,u){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","prototype.html.vue"]]);export{r as default};
