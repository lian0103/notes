import{_ as c,r as o,o as i,c as l,a as n,b as a,w as p,d as s,e as u}from"./app-Pb3OPLon.js";const k={},r=n("h1",{id:"mongodb儲存職缺資訊",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#mongodb儲存職缺資訊","aria-hidden":"true"},"#"),s(" MongoDB儲存職缺資訊")],-1),d={class:"table-of-contents"},m=u(`<p>上回爬取itHome2022鐵人賽文章後，這次拿104的職缺資料來爬取條件「javascript、本日最新」的結果。依據觀察，104目前的搜尋結果，不會完全依照前台給的條件，還會有如優先曝光或推薦職缺的內容會混入。因此，把資料爬取後儲存到MongoDB，再使用Mongo shell語法篩選，看起來比直接使用104介面還「乾淨」。</p><h2 id="連線mongodb" tabindex="-1"><a class="header-anchor" href="#連線mongodb" aria-hidden="true">#</a> 連線MongoDB</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> MongoClient <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongodb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> clientMongo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MongoClient</span><span class="token punctuation">(</span><span class="token string">&#39;mongodb://localhost:27017/articles&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">connectMongo</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> clientMongo<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">disConnectMongo</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> clientMongo<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    clientMongo<span class="token punctuation">,</span>
    connectMongo<span class="token punctuation">,</span>
    disConnectMongo<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="寫入mongodb" tabindex="-1"><a class="header-anchor" href="#寫入mongodb" aria-hidden="true">#</a> 寫入MongoDB</h2><p>這裡的資料儲存方式，是沿用之前爬取資料後寫入json檔，然後我在爬取時註記是否為爬取日期和_id是否存在後，再新增資料，以避免重複。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> clientMongo<span class="token punctuation">,</span> connectMongo<span class="token punctuation">,</span> disConnectMongo <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./db&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs-extra&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> resolve <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> dayjs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;dayjs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">writeToDB</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token function">connectMongo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> file <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./data.json&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> fileObject <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>file <span class="token operator">||</span> <span class="token string">&#39;{}&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> promiseArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> dataArrForDB <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>fileObject<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> fileObject<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    dataArrForDB<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// console.log(item);</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token operator">?.</span>catchdDate <span class="token operator">===</span> <span class="token function">dayjs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&#39;YYYY-MM-DD&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            promiseArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
                <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token keyword">await</span> clientMongo<span class="token punctuation">.</span><span class="token function">db</span><span class="token punctuation">(</span><span class="token string">&#39;articles&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collection</span><span class="token punctuation">(</span><span class="token string">&#39;jobs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">_id</span><span class="token operator">:</span> item<span class="token punctuation">.</span>_id <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">await</span> clientMongo<span class="token punctuation">.</span><span class="token function">db</span><span class="token punctuation">(</span><span class="token string">&#39;articles&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collection</span><span class="token punctuation">(</span><span class="token string">&#39;jobs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insertOne</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>promiseArr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> <span class="token function">disConnectMongo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    writeToDB<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="mongodb-compass" tabindex="-1"><a class="header-anchor" href="#mongodb-compass" aria-hidden="true">#</a> MongoDB Compass</h2><p>透過介面操作也非常方便。 <img src="https://i.imgur.com/WxYaVXB.png" alt=""></p><h2 id="mongodb-compass-aggregations" tabindex="-1"><a class="header-anchor" href="#mongodb-compass-aggregations" aria-hidden="true">#</a> MongoDB Compass Aggregations</h2><p>這可以方便增/刪過濾條件，也可即使預覽結果 <img src="https://i.imgur.com/DMNgmjp.png" alt=""></p><h2 id="補充連結" tabindex="-1"><a class="header-anchor" href="#補充連結" aria-hidden="true">#</a> 補充連結</h2>`,11),v={href:"https://github.com/lian0103/nodeServices/blob/main/services/jobsCrawler.js",target:"_blank",rel:"noopener noreferrer"};function b(g,f){const t=o("router-link"),e=o("ExternalLinkIcon");return i(),l("div",null,[r,n("nav",d,[n("ul",null,[n("li",null,[a(t,{to:"#連線mongodb"},{default:p(()=>[s("連線MongoDB")]),_:1})]),n("li",null,[a(t,{to:"#寫入mongodb"},{default:p(()=>[s("寫入MongoDB")]),_:1})]),n("li",null,[a(t,{to:"#mongodb-compass"},{default:p(()=>[s("MongoDB Compass")]),_:1})]),n("li",null,[a(t,{to:"#mongodb-compass-aggregations"},{default:p(()=>[s("MongoDB Compass Aggregations")]),_:1})]),n("li",null,[a(t,{to:"#補充連結"},{default:p(()=>[s("補充連結")]),_:1})])])]),m,n("ul",null,[n("li",null,[n("a",v,[s("jobsCrawler.js"),a(e)])])])])}const w=c(k,[["render",b],["__file","mongoDBcompass.html.vue"]]);export{w as default};
