import{_ as i,r as c,o as l,c as u,b as n,a,w as e,d as s,t as r,e as o}from"./app.d9717a8a.js";const k={},d=n("h1",{id:"\u751F\u6210\u958B\u767C\u6587\u6A94",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u751F\u6210\u958B\u767C\u6587\u6A94","aria-hidden":"true"},"#"),s(" \u751F\u6210\u958B\u767C\u6587\u6A94")],-1),v={class:"table-of-contents"},m=n("p",null,"\u5728GT UI\u6A94\u6848\u7D50\u69CB\u4E2D\uFF0C\u8981\u628Apackage\u8CC7\u6599\u593E\u5167\u7684\u5404\u5143\u4EF6\u5C55\u793A\u7684demo.vue\u4EE3\u78BC\u5728\u958B\u767C\u6642\u4F7F\u7528\uFF0C\u4E5F\u5728\u5C55\u793A\u9801\u9762\u7D42\u8B93\u5176\u4ED6\u958B\u767C\u8005\u76F4\u63A5\u770B\u5230\u3002",-1),b={href:"https://github.com/lian0103/vue-ui/blob/main/scripts/genGtPkgDoc/index.js",target:"_blank",rel:"noopener noreferrer"},f=o('<h2 id="\u8B80\u53D6dmeo-vue\u7D66md\u5143\u4EF6\u986F\u793A" tabindex="-1"><a class="header-anchor" href="#\u8B80\u53D6dmeo-vue\u7D66md\u5143\u4EF6\u986F\u793A" aria-hidden="true">#</a> \u8B80\u53D6dmeo.vue\u7D66md\u5143\u4EF6\u986F\u793A</h2><p>\u5C55\u793A\u9801\u7684\u756B\u9762\uFF0C\u5143\u4EF6\u7684\u6548\u679C\u548C\u958B\u767C\u8005\u7684\u4EE3\u78BC\u53EF\u4EE5\u4E00\u540C\u986F\u793A\u3002 <img src="https://i.imgur.com/INe38rl.jpg" alt=""></p><div class="custom-container tip"><p class="custom-container-title">info</p><p>\u4E3B\u8981\u8ABF\u6574\u7684\u90E8\u5206\u5728\u65BC\u8A72\u5C08\u6848\u4F7F\u7528\u4E00\u4E9B\u65B9\u6CD5\u8981\u53BB\u52D5\u614B import md \u6A94\uFF0C\u672C\u5730\u958B\u767C\u80FD\u6B63\u5E38\uFF0C\u4F46\u6253\u5305\u5F8C\u9700\u8981\u8ABF\u6574\u6210 fetch \u7684\u4F5C\u6CD5\uFF0C\u9019\u90E8\u5206\u6211\u5728\u4F7F\u7528 gitgub page \u6E2C\u8A66\u6642\u672A\u80FD\u6210\u529F\u3002 \u56E0\u6B64\uFF0C\u6211\u6539\u6210\u5728\u6253\u5305\u524D\u5C31\u53BB\u751F\u6210 demo \u6A94\u7684\u5167\u5BB9\uFF0C\u4E5F\u5C31\u4E0D\u7528\u628A md \u6A94\u4E00\u4F75\u4F48\u7F72\u5728 web server\u3002</p></div><h2 id="fs-extra" tabindex="-1"><a class="header-anchor" href="#fs-extra" aria-hidden="true">#</a> fs-extra</h2><p>\u8B80\u53D6\u6A94\u6848\u8207\u5BEB\u5165\u6A94\u6848\u7684\u5DE5\u5177\u3002</p>',5),g={href:"https://www.npmjs.com/package/fs-extra",target:"_blank",rel:"noopener noreferrer"},h=o(`<p>\u57FA\u672C\u7BC4\u4F8B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs-extra&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> filePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../.template/demo.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> fileContent <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">//   console.log(fileContent);</span>
  <span class="token keyword">return</span> fileContent<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">write</span><span class="token punctuation">(</span><span class="token parameter">fileContent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> destFilePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../output/demo.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  fs<span class="token punctuation">.</span><span class="token function">outputFile</span><span class="token punctuation">(</span>destFilePath<span class="token punctuation">,</span> fileContent<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">write</span><span class="token punctuation">(</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="handlebars" tabindex="-1"><a class="header-anchor" href="#handlebars" aria-hidden="true">#</a> handlebars</h2>`,3),y={href:"https://www.npmjs.com/package/handlebars",target:"_blank",rel:"noopener noreferrer"},w=o(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// /.template/obj.js.tpl</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">{</span><span class="token punctuation">{</span>objContent<span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs-extra&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> handlebars <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;handlebars&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> resolve<span class="token punctuation">,</span> join <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">genObjFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> answerFileContent <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>
    fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token function">join</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;/output/answers.json&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">//\u8B80\u53D6\u6A21\u677F\u6A94\u6848</span>
  <span class="token keyword">const</span> tempFilePath <span class="token operator">=</span> <span class="token function">join</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;/.template/obj.js.tpl&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> tempFile <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>tempFilePath<span class="token punctuation">,</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">//\u7522\u751F\u6A21\u677F\u6A94\u6848\u5C0D\u61C9\u7684\u5B57\u4E32 ex. {{objContent}}</span>
  <span class="token keyword">const</span> objContent <span class="token operator">=</span> answerFileContent
    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> idx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">answer</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>idx<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;\\n    &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">//\u900F\u904Ehandlebar\u5C07\u6A21\u677F\u7522\u751F</span>
  <span class="token keyword">const</span> contentCompiled <span class="token operator">=</span> handlebars<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>tempFile<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">noEscape</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">objContent</span><span class="token operator">:</span> objContent <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">//\u5BEB\u51FA\u6A94\u6848</span>
  fs<span class="token punctuation">.</span><span class="token function">outputFile</span><span class="token punctuation">(</span>
    <span class="token function">join</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;/output/obj.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    contentCompiled<span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  genObjFile<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5176\u4ED6\u9078\u64C7-inquirer" tabindex="-1"><a class="header-anchor" href="#\u5176\u4ED6\u9078\u64C7-inquirer" aria-hidden="true">#</a> \u5176\u4ED6\u9078\u64C7 inquirer</h2><p>\u5F88\u5F37\u5927\u7684\u8F38\u5165\u5DE5\u5177\uFF0C\u53EF\u4EE5\u81EA\u5B9A\u7FA9\u5404\u7A2E\u985E\u578B\u7684\u554F\u984C\uFF0C\u4E26\u505A\u9A57\u8B49\u3001\u904E\u6FFE\u3001\u9810\u8A2D\u503C\u3001\u6E05\u55AE\u7B49\u7B49\u529F\u80FD\uFF0C\u6700\u5F8C\u6703\u56DE\u50B3\u4E00\u500B\u56DE\u7B54\u7684\u7269\u4EF6\u3002</p>`,4),q={href:"https://www.npmjs.com/package/inquirer#reactive",target:"_blank",rel:"noopener noreferrer"},_=o(`<p>\u57FA\u672C\u7BC4\u4F8B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">const</span> inquirer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;inquirer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> prompt <span class="token operator">=</span> inquirer<span class="token punctuation">.</span><span class="token function">createPromptModule</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> questions <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;input&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Q1&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;Q1\u56DE\u7B54:&quot;</span><span class="token punctuation">,</span>
      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span>
      <span class="token function-variable function">filter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">input</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;filter-&quot;</span> <span class="token operator">+</span> input<span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function-variable function">validate</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">input</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> done <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">async</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>input <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">done</span><span class="token punctuation">(</span><span class="token string">&quot;\u7B54\u6848\u4E0D\u80FD\u662F1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">done</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;confirm&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Q2&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;Q2\u56DE\u7B54:&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;list&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Q3&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;Q3\u56DE\u7B54:&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">choices</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;input&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Q4&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;\u8EAB\u4EFD\u8B49\u5B57\u865F:&quot;</span><span class="token punctuation">,</span>
      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&quot;a123456789&quot;</span><span class="token punctuation">,</span>
      <span class="token function-variable function">validate</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">input</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> done <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">async</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> idReg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z][0-9]{9}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>idReg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">done</span><span class="token punctuation">(</span><span class="token string">&quot;\u8EAB\u5206\u8B49\u932F\u8AA4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token function">done</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">answersCollect</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">prompt</span><span class="token punctuation">(</span>questions<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    answersCollect<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53C3\u8003" tabindex="-1"><a class="header-anchor" href="#\u53C3\u8003" aria-hidden="true">#</a> \u53C3\u8003</h2>`,3),j={href:"https://github.com/jrainlau/MY-Kit",target:"_blank",rel:"noopener noreferrer"};function x(C,F){const t=c("router-link"),p=c("ExternalLinkIcon");return l(),u("div",null,[d,n("nav",v,[n("ul",null,[n("li",null,[a(t,{to:"#\u8B80\u53D6dmeo-vue\u7D66md\u5143\u4EF6\u986F\u793A"},{default:e(()=>[s("\u8B80\u53D6dmeo.vue\u7D66md\u5143\u4EF6\u986F\u793A")]),_:1})]),n("li",null,[a(t,{to:"#fs-extra"},{default:e(()=>[s("fs-extra")]),_:1})]),n("li",null,[a(t,{to:"#handlebars"},{default:e(()=>[s("handlebars")]),_:1})]),n("li",null,[a(t,{to:"#\u5176\u4ED6\u9078\u64C7-inquirer"},{default:e(()=>[s("\u5176\u4ED6\u9078\u64C7 inquirer")]),_:1})]),n("li",null,[a(t,{to:"#\u53C3\u8003"},{default:e(()=>[s("\u53C3\u8003")]),_:1})])])]),m,n("p",null,[n("a",b,[s("\u8CA0\u8CAC\u7522\u751FGT-UI\u5C55\u793A\u5167\u5BB9\u7684\u4EE3\u78BC"),a(p)])]),f,n("p",null,[n("a",g,[s("fs-extra npm"),a(p)])]),h,n("p",null,[s("\u628A.tpl \u683C\u5F0F\u7684\u6A21\u677F\u6A94\u6848\u4E2D\uFF0C\u6709\u7528"+r()+"\u62EC\u865F\u5305\u8D77\u7684\u8B8A\u6578\u66FF\u63DB\u6389\uFF0C\u7DE8\u8B6F\u6210\u8981\u532F\u51FA\u7684\u6A94\u6848\u3002 ",1),n("a",y,[s("handlebars npm"),a(p)])]),w,n("p",null,[n("a",q,[s("inquirer npm"),a(p)])]),_,n("p",null,[n("a",j,[s("\u5EFA\u7F6E\u6587\u6A94\u53C3\u8003\u8CC7\u6E90"),a(p)])])])}const N=i(k,[["render",x],["__file","genDoc.html.vue"]]);export{N as default};
