import{_ as l,r as c,o as i,c as u,a as n,b as a,w as e,d as s,e as o}from"./app-gODyNfEM.js";const r={},d=n("h1",{id:"nuxt3-features",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#nuxt3-features","aria-hidden":"true"},"#"),s(" Nuxt3 features")],-1),k={class:"table-of-contents"},v=o('<h2 id="概念" tabindex="-1"><a class="header-anchor" href="#概念" aria-hidden="true">#</a> 概念</h2><p>打通web後端到前端的開發方式，優勢上是語言的一致，資料類型即的一致。在NuxtJS也提供各種功能，來做到SSR(Server Side Render)機制，並利用專案的資料夾結構去綁定這些功能。</p><p>功能資料夾包含:</p><p>├─page<br> ├─layouts<br> ├─components<br> ├─composable<br> ├─public<br> ├─server<br> ├─content<br> └─middleware</p><p>以上這些我將依據前後端的使用情境，將它們歸類，並就我理解的使用方式作補充。</p><p>使用版本 &quot;nuxt&quot;: &quot;^3.0.0-rc.3&quot;</p><hr><h2 id="前端" tabindex="-1"><a class="header-anchor" href="#前端" aria-hidden="true">#</a> 前端</h2><h3 id="├─page" tabindex="-1"><a class="header-anchor" href="#├─page" aria-hidden="true">#</a> ├─page</h3><p>在前端每個頁面路徑(path)都能在這個資料夾內找到對應的頁面檔。比如&#39;/&#39;對應&#39;index.vue，&#39;/about&#39;對應&#39;about.vue&#39;。</p><p>nuxt也支援path上帶有動態的參數，page的檔名命名方式為&quot;[paramName].vue&quot;。</p>',11),m={href:"https://v3.nuxtjs.org/guide/directory-structure/pages",target:"_blank",rel:"noopener noreferrer"},b=o(`<h3 id="├─layouts" tabindex="-1"><a class="header-anchor" href="#├─layouts" aria-hidden="true">#</a> ├─layouts</h3><p>而在各頁面中可以使用共用的佈局模板，在這個資料夾預設使用為default.vue，搭配slot特性與頁面去做嵌套。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>#default.vue
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Nav</span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content-wrapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="├─components" tabindex="-1"><a class="header-anchor" href="#├─components" aria-hidden="true">#</a> ├─components</h3><p>而不管是在page、layouts中還可以切分出更多共用的單位組件時，比如Nav組件使用在不同layout組件時，就會在這個資料夾下新增Nav.vue。</p><p>同時，在Nuxt框架下，也提供各種組件來使用，比如，NuxtLink組件，來實作連結。</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>#Nav.vue
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span>
    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>flex items-center justify-between h-20 px-[5%] lg:px-[15%] nav-header<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NuxtLink</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>font-bold text-2xl lg:text-4xl<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>N<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>otes
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>NuxtLink</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),h={href:"https://v3.nuxtjs.org/guide/directory-structure/components",target:"_blank",rel:"noopener noreferrer"},g=n("h3",{id:"├─public",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#├─public","aria-hidden":"true"},"#"),s(" ├─public")],-1),f=n("p",null,"在資料夾下放置的靜態檔案，可以讓客戶端直接訪問取得。比如放置favicon.ico，在部署後可以透過 https://nuxt3-notes.vercel.app/favicon.ico 訪問。",-1),y={href:"https://nuxtjs.org/docs/directory-structure/static/",target:"_blank",rel:"noopener noreferrer"},x=n("h3",{id:"├─composable",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#├─composable","aria-hidden":"true"},"#"),s(" ├─composable")],-1),_=n("p",null,"在資料夾結構中的每支檔案可以管理目前頁面間的共同狀態，使用方式是會自動import到page、layout的vue檔來呼叫，這也包含nuxt本身提供的方法，比如useHead()、useAsyncData()...等等。",-1),w={href:"https://v3.nuxtjs.org/api/composables/use-async-data",target:"_blank",rel:"noopener noreferrer"},q=o(`<p>範例:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// composables/useAuth.js</span>
<span class="token keyword">const</span> decode <span class="token operator">=</span> <span class="token punctuation">(</span>cookie <span class="token operator">=</span> <span class="token string">&#39;null&#39;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>cookie<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">encode</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">cookie</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>cookie<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">useAuth</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> authCookie <span class="token operator">=</span> <span class="token function">useCookie</span><span class="token punctuation">(</span><span class="token string">&#39;auth&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    encode<span class="token punctuation">,</span>
    decode<span class="token punctuation">,</span>
    <span class="token function-variable function">default</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">deleteCookie</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">guessWord</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    authCookie<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">$fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/api/auth</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;DELETE&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span> authCookie<span class="token punctuation">,</span> deleteCookie <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//使用</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> authCookie<span class="token punctuation">,</span> deleteCookie <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="├─middleware" tabindex="-1"><a class="header-anchor" href="#├─middleware" aria-hidden="true">#</a> ├─middleware</h3><p>在資料夾中可定義路由的中間層，作為像是訪問權限的確認。 範例:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//auth.global.js</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineNuxtRouteMiddleware</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> <span class="token keyword">from</span></span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;in nuxt middleware auth.js&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> authCookie<span class="token punctuation">,</span> deleteCookie <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>path <span class="token operator">===</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">navigateTo</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>authCookie<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">navigateTo</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">navigateTo</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>path<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="後端" tabindex="-1"><a class="header-anchor" href="#後端" aria-hidden="true">#</a> 後端</h2><h3 id="├─server" tabindex="-1"><a class="header-anchor" href="#├─server" aria-hidden="true">#</a> ├─server</h3><p>在server/api資料夾下，nuxt提供前端呼叫API server的模擬機制，來把資料回應給前端。 以範例來解說，defineEventHandler是nuxt定義的事件函式，event模擬的request中包含了呼叫請求的資訊。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//server/api/user/index.js</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> v4 <span class="token keyword">as</span> uuid <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;uuid&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> sendError <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;h3&#39;</span><span class="token punctuation">;</span>

<span class="token comment">//模擬使用</span>
<span class="token keyword">const</span> db <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">users</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineEventHandler</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>req<span class="token punctuation">.</span>method<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
    <span class="token comment">//GET http://localhost:3000/api/user</span>
    <span class="token keyword">case</span> <span class="token string">&#39;GET&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> db<span class="token punctuation">.</span>users<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//POST http://localhost:3000/api/user</span>
    <span class="token keyword">case</span> <span class="token string">&#39;POST&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> body <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">useBody</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>body<span class="token punctuation">.</span>userName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> badRequestErr <span class="token operator">=</span> <span class="token function">createError</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">statusCode</span><span class="token operator">:</span> <span class="token number">400</span><span class="token punctuation">,</span>
          <span class="token literal-property property">statusMessage</span><span class="token operator">:</span> <span class="token string">&#39;userName is not found&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">sendError</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> badRequestErr<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">const</span> newUser <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token function">uuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token literal-property property">item</span><span class="token operator">:</span> body<span class="token punctuation">.</span>userName<span class="token punctuation">,</span>
        <span class="token literal-property property">online</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>

      db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>newUser<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> newUser<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>前端部分，使用$fetch()、useFetch()呼叫server/api對應結構的檔案</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>
<span class="token keyword">const</span> resultGet <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">$fetch</span><span class="token punctuation">(</span><span class="token string">&quot;/api/user&quot;</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">method</span><span class="token operator">:</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> resultPost <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">$fetch</span><span class="token punctuation">(</span><span class="token string">&quot;/api/user&quot;</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">method</span><span class="token operator">:</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="├─content" tabindex="-1"><a class="header-anchor" href="#├─content" aria-hidden="true">#</a> ├─content</h3><p>在這個資料夾中可放置各種文檔和資料，如.md、.json，概念在客戶端不能直接透過路徑去訪問到這些檔案，而是需要透過nuxt提供的queryContent()來調取檔案。 範例:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#加入一個lineBot串接.md</span>
content
├─1.blog
  ├─1.Third Part Tools
    ├─1.lineBot串接.md
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//透過檔案路徑取得檔案 (目前版本中文字元會被取代掉)</span>
<span class="token keyword">const</span> filePath <span class="token operator">=</span> <span class="token string">&quot;blog/third-part-tools/lineBot&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">data</span><span class="token operator">:</span> blog <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">useAsyncData</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">queryContent</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16),j={href:"https://content.nuxtjs.org/api/composables/query-content/#findone",target:"_blank",rel:"noopener noreferrer"},N=n("h2",{id:"nuxt-config-js",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#nuxt-config-js","aria-hidden":"true"},"#"),s(" nuxt.config.js")],-1),C={href:"https://v3.nuxtjs.org/api/configuration/nuxt.config",target:"_blank",rel:"noopener noreferrer"},E=n("hr",null,null,-1),T=n("h2",{id:"連結",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#連結","aria-hidden":"true"},"#"),s(" 連結")],-1),S={href:"https://github.com/lian0103/nuxt3-notes",target:"_blank",rel:"noopener noreferrer"};function P(A,B){const t=c("router-link"),p=c("ExternalLinkIcon");return i(),u("div",null,[d,n("nav",k,[n("ul",null,[n("li",null,[a(t,{to:"#概念"},{default:e(()=>[s("概念")]),_:1})]),n("li",null,[a(t,{to:"#前端"},{default:e(()=>[s("前端")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#├─page"},{default:e(()=>[s("├─page")]),_:1})]),n("li",null,[a(t,{to:"#├─layouts"},{default:e(()=>[s("├─layouts")]),_:1})]),n("li",null,[a(t,{to:"#├─components"},{default:e(()=>[s("├─components")]),_:1})]),n("li",null,[a(t,{to:"#├─public"},{default:e(()=>[s("├─public")]),_:1})]),n("li",null,[a(t,{to:"#├─composable"},{default:e(()=>[s("├─composable")]),_:1})]),n("li",null,[a(t,{to:"#├─middleware"},{default:e(()=>[s("├─middleware")]),_:1})])])]),n("li",null,[a(t,{to:"#後端"},{default:e(()=>[s("後端")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#├─server"},{default:e(()=>[s("├─server")]),_:1})]),n("li",null,[a(t,{to:"#├─content"},{default:e(()=>[s("├─content")]),_:1})])])]),n("li",null,[a(t,{to:"#nuxt-config-js"},{default:e(()=>[s("nuxt.config.js")]),_:1})]),n("li",null,[a(t,{to:"#連結"},{default:e(()=>[s("連結")]),_:1})])])]),v,n("p",null,[n("a",m,[s("nuxt page doc"),a(p)])]),b,n("p",null,[n("a",h,[s("Nuxt3 components doc"),a(p)])]),g,f,n("p",null,[s("目前nuxt3文件示意參照nuxt2 static說明。 "),n("a",y,[s("Nuxt2 static doc"),a(p)])]),x,_,n("p",null,[n("a",w,[s("nuxt composable doc"),a(p)])]),q,n("p",null,[n("a",j,[s("nuxt quertyContent doc"),a(p)])]),N,n("p",null,[n("a",C,[s("nuxt config doc"),a(p)])]),E,T,n("p",null,[n("a",S,[s("範例內容"),a(p)])])])}const O=l(r,[["render",P],["__file","nuxtFeat.html.vue"]]);export{O as default};
