import{_ as e,o,c as l,f as s}from"./app-a3YRQ2EQ.js";const t="/notes/assets/GoogleDevIcon-b8TCqwTo.svg",i={},a=s('<div class="articleWrapper"><div class="d-none"><h1 id="使用-google-開發者全家桶" tabindex="-1"><a class="header-anchor" href="#使用-google-開發者全家桶" aria-hidden="true">#</a> 使用 Google 開發者全家桶</h1></div><p><img src="'+t+'" alt=""></p><p>從去年開始累積前端作品，還要讓作品能部署上線，期間陸續用了許多 Google 面向開發者的產品在自己練習的專案，包含:</p><ul><li>Google Domain<br> 用來買自己網域，並透過 DNS 設定，把 github page 指給自己的網域使用</li><li>Google Analytics<br> 陸續把練習的 nuxt3、vuepress2 的練習專案，埋設了 Analytics 的設定，讓我能從後台直接看到網頁瀏覽量</li><li>Google Firebase<br> 在開設專案後，最常使用當中的 Hosting 服務，可以和 github page 一樣很快把練習成果部署上線 但 Firebase 強大的功能，還像是 Auth 服務，能讓前端在沒有後端的情況下做註冊/登入等功能</li><li>Google Cloud<br> 建立 nodjs express 專案後，實際要運行需要部署到服務器上，我使用這產品來託管應用</li></ul><p>像是 Google Firebase 和 Google Cloud 有提供各自的 CLI 工具，對照官方文件的使用方式，並不會太難理解 此外，可以很方便用一個 Google 帳號就進入這些服務的後台，算是相當方便</p><p>如果是以專案練習和準備作品的角度，使用這些服務可以省下不少要去搞懂怎麼管機器、設定的心智負擔。因此可以把專注力都留在原本想練習的技術上，提供大家參考~~</p></div>',1),r=[a];function c(n,g){return o(),l("div",null,r)}const p=e(i,[["render",c],["__file","talkGoogle.html.vue"]]);export{p as default};
