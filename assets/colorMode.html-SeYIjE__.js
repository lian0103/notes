import{_ as c,r as o,o as l,c as i,a as n,b as a,w as e,d as s,e as u}from"./app-gODyNfEM.js";const r={},d=n("h1",{id:"nuxt3app顏色模式",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#nuxt3app顏色模式","aria-hidden":"true"},"#"),s(" Nuxt3App顏色模式")],-1),k={class:"table-of-contents"},v=u(`<p>透過html結構裡的上下層繼承變數的特性，當上層變數指向的背景色、文字色改變時，下層的樣式即可響應。</p><h2 id="css配置" tabindex="-1"><a class="header-anchor" href="#css配置" aria-hidden="true">#</a> css配置</h2><p>在document html樹狀結構中，html或body都可以作為綁定的上層。這裡預設一個body預設的樣式對照，使用了css變數的語法(ex. --mode-text-color:rgba(0, 0, 0, 0.8)😉；而另一個深色模式則是多了一個class名稱的body。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">body.light-mode</span> <span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.8<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">--mode-text-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.8<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">--mode-text-color-hover</span><span class="token punctuation">:</span> #6d28d9<span class="token punctuation">;</span>
  <span class="token property">--border-color</span><span class="token punctuation">:</span> #ccc<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">body.dark-mode</span> <span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> #091a28<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> #ebf4f1<span class="token punctuation">;</span>
  <span class="token property">--mode-text-color</span><span class="token punctuation">:</span> #ebf4f1<span class="token punctuation">;</span>
  <span class="token property">--mode-text-color-hover</span><span class="token punctuation">:</span> #6d28d9<span class="token punctuation">;</span>
  <span class="token property">--border-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="在html渲染結果對照" tabindex="-1"><a class="header-anchor" href="#在html渲染結果對照" aria-hidden="true">#</a> 在html渲染結果對照</h2><div><img src="https://i.imgur.com/wJ0dg5B.jpg" alt=""><img src="https://i.imgur.com/rsP9HC5.jpg" alt=""></div><p>而在下層的樣式中，就可以使用上層定義好的變量。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.tocBox</span> <span class="token punctuation">{</span>
  <span class="token property">border-color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--border-color<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.prose</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--mode-text-color<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="取得作業系統的顏色模式" tabindex="-1"><a class="header-anchor" href="#取得作業系統的顏色模式" aria-hidden="true">#</a> 取得作業系統的顏色模式</h2><p>瀏覽器可以取得使用者作業系統的顏色模式，再讓javascript來讀取，這部分的資訊儲存於media內。並且多一個監聽事件，在使用者改變系統顏色模式時來響應。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span><span class="token function">matchMedia</span><span class="token punctuation">(</span><span class="token string">&#39;(prefers-color-scheme: dark)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>matches <span class="token operator">:</span>Boolean

window
	<span class="token punctuation">.</span><span class="token function">matchMedia</span><span class="token punctuation">(</span><span class="token string">&quot;(prefers-color-scheme: dark)&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;change&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>matches<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="自訂可切換的顏色模式" tabindex="-1"><a class="header-anchor" href="#自訂可切換的顏色模式" aria-hidden="true">#</a> 自訂可切換的顏色模式</h2><p>跟使用者作業系統的顏色模式相對脫鉤，我預想是把顏色模式儲存於瀏覽器的localstorage，對於使用者切換上更便利，不需要再去改動作業系統的顏色模式。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//可以先抓取作業系統的顏色模式</span>
<span class="token keyword">let</span> mode <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">matchMedia</span><span class="token punctuation">(</span><span class="token string">&#39;(prefers-color-scheme: dark)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>matches <span class="token operator">?</span> <span class="token string">&#39;dark&#39;</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

<span class="token comment">//再抓取使用者存取瀏覽器操作的顏色模式紀錄</span>
mode <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;app-color-mode&#39;</span><span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token punctuation">(</span>mode <span class="token operator">??</span> <span class="token string">&#39;light&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//最後去把目標的上層html tag綁定對應顏色模式的class名稱</span>
document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&#39;body&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;class&#39;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>mode<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-mode</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="serversiderender和clientsiderender差異" tabindex="-1"><a class="header-anchor" href="#serversiderender和clientsiderender差異" aria-hidden="true">#</a> ServerSideRender和ClientSideRender差異</h2><p>window和document物件必須是在Client端的瀏覽器運行時才能使用，所以當渲染機制是使用SSR時，就必須注意這段取得和判別顏色模式的腳本是在client端發生，才能符合這次介紹的顏色模式機制。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//Nuxt3 SSR情境下，判別的腳本寫在onMounted這個hook中</span>
<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> mode <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;nuxt3-app-color-mode&#39;</span><span class="token punctuation">,</span> mode<span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token string">&#39;light&#39;</span>

  document<span class="token operator">?.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&#39;body&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">?.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;class&#39;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>mode<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-mode</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同時在nuxt3框架之下，狀態管理的方式可以這樣使用，來實作切換功能。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> colorEnum <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token constant">DARK</span><span class="token operator">:</span> <span class="token string">&#39;dark&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">LIGHT</span><span class="token operator">:</span> <span class="token string">&#39;light&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">SEPIA</span><span class="token operator">:</span> <span class="token string">&#39;sepia&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> appMode <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;appMode&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">handleAppMode</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>appMode<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> colorEnum<span class="token punctuation">.</span><span class="token constant">LIGHT</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      appMode<span class="token punctuation">.</span>value <span class="token operator">=</span> colorEnum<span class="token punctuation">.</span><span class="token constant">DARK</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">case</span> colorEnum<span class="token punctuation">.</span><span class="token constant">DARK</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      appMode<span class="token punctuation">.</span>value <span class="token operator">=</span> colorEnum<span class="token punctuation">.</span><span class="token constant">SEPIA</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">case</span> colorEnum<span class="token punctuation">.</span><span class="token constant">SEPIA</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      appMode<span class="token punctuation">.</span>value <span class="token operator">=</span> colorEnum<span class="token punctuation">.</span><span class="token constant">LIGHT</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">addModeClass</span><span class="token punctuation">(</span>appMode<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="參考" tabindex="-1"><a class="header-anchor" href="#參考" aria-hidden="true">#</a> 參考</h2>`,20),m={href:"https://github.com/lian0103/nuxt3-notes/blob/main/components/Nav.vue",target:"_blank",rel:"noopener noreferrer"},b={href:"https://www.section.io/engineering-education/watch-for-system-dark-mode-using-js-css/",target:"_blank",rel:"noopener noreferrer"};function h(g,f){const t=o("router-link"),p=o("ExternalLinkIcon");return l(),i("div",null,[d,n("nav",k,[n("ul",null,[n("li",null,[a(t,{to:"#css配置"},{default:e(()=>[s("css配置")]),_:1})]),n("li",null,[a(t,{to:"#在html渲染結果對照"},{default:e(()=>[s("在html渲染結果對照")]),_:1})]),n("li",null,[a(t,{to:"#取得作業系統的顏色模式"},{default:e(()=>[s("取得作業系統的顏色模式")]),_:1})]),n("li",null,[a(t,{to:"#自訂可切換的顏色模式"},{default:e(()=>[s("自訂可切換的顏色模式")]),_:1})]),n("li",null,[a(t,{to:"#serversiderender和clientsiderender差異"},{default:e(()=>[s("ServerSideRender和ClientSideRender差異")]),_:1})]),n("li",null,[a(t,{to:"#參考"},{default:e(()=>[s("參考")]),_:1})])])]),v,n("p",null,[n("a",m,[s("Nuxt3內實作完整程式碼"),a(p)])]),n("p",null,[n("a",b,[s("How to Watch for System Dark Mode Changes Using JavaScript and CSS"),a(p)])])])}const x=c(r,[["render",h],["__file","colorMode.html.vue"]]);export{x as default};
