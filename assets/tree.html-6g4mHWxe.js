import{_ as c,r as p,o as l,c as i,a as n,b as s,w as t,d as a,f as r}from"./app-eRNuxQFn.js";const u={},d=n("h1",{id:"tree元件遞迴實作",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#tree元件遞迴實作","aria-hidden":"true"},"#"),a(" tree元件遞迴實作")],-1),k={class:"table-of-contents"},v=r(`<h2 id="資料結構" tabindex="-1"><a class="header-anchor" href="#資料結構" aria-hidden="true">#</a> 資料結構</h2><p>在tree的資料結構中，parent和child(TreeItem)的關係會如下:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//root</span>
Array<span class="token punctuation">[</span>TreeItem<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">//parent &amp; child</span>
<span class="token literal-property property">TreeItem</span><span class="token operator">:</span>Object<span class="token punctuation">{</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span>String<span class="token punctuation">,</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span>Boolean<span class="token punctuation">,</span>
    children<span class="token operator">?</span><span class="token operator">:</span>Array<span class="token punctuation">[</span>TreeItem<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>而為了在元件中記錄操作的狀態，要對tree資料增加屬性，比如collasped(是否為折疊)、isCurrentArea(是否為當前選擇區塊)等等，這依照需求來添加。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//parent &amp; child</span>
<span class="token literal-property property">TreeItem</span><span class="token operator">:</span>Object<span class="token punctuation">{</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span>String<span class="token punctuation">,</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span>Boolean<span class="token punctuation">,</span>
    <span class="token literal-property property">collasped</span><span class="token operator">:</span>Boolean<span class="token punctuation">,</span>
    <span class="token literal-property property">isCurrentArea</span><span class="token operator">:</span>Boolean<span class="token punctuation">,</span>
    children<span class="token operator">?</span><span class="token operator">:</span>Array<span class="token punctuation">[</span>TreeItem<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="遞迴地資料更新" tabindex="-1"><a class="header-anchor" href="#遞迴地資料更新" aria-hidden="true">#</a> 遞迴地資料更新</h2><p>為了在某一子層節點綁定改變資料狀態的事件，這可能包含改變自己這層、子層、父層或是不直接隸屬的分支，這時則可以選擇從root來做遞迴地資料更新。</p><p><strong>使用vue3 provide和inject API</strong></p><p>實作的方法checkAll，透過vue3 provide API可以提供給子層元件使用，子層則使用inject API來獲得root層的方法。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//root</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> provide <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">checkAll</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> value<span class="token punctuation">,</span> attr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// console.log(arr, value);</span>
  arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    item<span class="token punctuation">[</span>attr<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">checkAll</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>children<span class="token punctuation">,</span> value<span class="token punctuation">,</span> attr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">provide</span><span class="token punctuation">(</span><span class="token string">&#39;checkAll&#39;</span><span class="token punctuation">,</span>checkAll<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//child</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>inject <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> checkAll <span class="token operator">=</span> <span class="token function">inject</span><span class="token punctuation">(</span><span class="token string">&#39;checkAll&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="實作成果" tabindex="-1"><a class="header-anchor" href="#實作成果" aria-hidden="true">#</a> 實作成果</h2><p><img src="https://i.imgur.com/UGrPshk.png" alt=""></p><h2 id="連結" tabindex="-1"><a class="header-anchor" href="#連結" aria-hidden="true">#</a> 連結</h2>`,14),m={href:"https://github.com/lian0103/vue-ui/tree/main/package/gt-components/tree/src",target:"_blank",rel:"noopener noreferrer"};function h(b,g){const e=p("router-link"),o=p("ExternalLinkIcon");return l(),i("div",null,[d,n("nav",k,[n("ul",null,[n("li",null,[s(e,{to:"#資料結構"},{default:t(()=>[a("資料結構")]),_:1})]),n("li",null,[s(e,{to:"#遞迴地資料更新"},{default:t(()=>[a("遞迴地資料更新")]),_:1})]),n("li",null,[s(e,{to:"#實作成果"},{default:t(()=>[a("實作成果")]),_:1})]),n("li",null,[s(e,{to:"#連結"},{default:t(()=>[a("連結")]),_:1})])])]),v,n("p",null,[n("a",m,[a("完整代碼位置"),s(o)])])])}const _=c(u,[["render",h],["__file","tree.html.vue"]]);export{_ as default};
